service: ilios-lti-launch

custom:
  ltiDashboard-dev: 'https://dev-lti-dashboard.iliosproject.org'
  ltiDashboard-prod: 'https://lti-dashboard.iliosproject.org'
  ltiCourseManager-dev: 'https://dev-lti-course-manager.iliosproject.org'
  ltiCourseManager-prod: 'https://lti-course-manager.iliosproject.org'
  additionalStacks:
    permanent:
      Resources:
        S3BucketData:
          Type: AWS::S3::Bucket
          Properties:
            BucketName: ${self:provider.environment.CONFIG_BUCKET}
            AccessControl: Private
          DeletionPolicy : Retain

plugins:
 - serverless-plugin-additional-stacks

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 128
  timeout: 5
  stage: dev
  region: us-west-2
  versionFunctions: false
  stackTags:
    Tag1 : lti
    Tag2 : lti-launch
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "arn:aws:s3:::${self:provider.environment.CONFIG_BUCKET}/*"
    - Effect: "Allow"
      Action:
        - "sdb:*"
      Resource: "arn:aws:sdb:${self:provider.region}:*:domain/${self:service}-${opt:stage, self:provider.stage}-LTILaunchUserSimpleDB-*"

  environment:
       DASHBOARD_APP_URL: ${self:custom.ltiDashboard-${opt:stage, self:provider.stage}}
       COURSE_MANAGER_APP_URL: ${self:custom.ltiCourseManager-${opt:stage, self:provider.stage}}
       USERID_SIMPLEDB_DOMAIN:
         Ref: LTILaunchUserSimpleDB
       CONFIG_BUCKET: 'ilios-lti-launch-configuration-${opt:stage, self:provider.stage}'

functions:
  dashboard:
    description: Launches the ilios-lti application dashboard
    handler: handler.dashboard
    events:
      - http:
          path: dashboard
          method: post
          integration: lambda-proxy
  courseManager:
    description: Launches the ilios-lti course manager
    handler: handler.courseManager
    events:
      - http:
          path: course-manager
          method: post
          integration: lambda-proxy
  payload:
    description: Displays LTI payload data from POST request to the user
    handler: handler.payload
    events:
      - http:
          path: payload
          method: post
          integration: lambda-proxy

resources:
  Resources:
    LTILaunchUserSimpleDB:
      Type: "AWS::SDB::Domain"
      Properties:
        Description: LaunchLTI SimpleDB for caching userId values
