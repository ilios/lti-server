name: Deploy Pull Request

on:
  pull_request_target:
    types: [labeled]

concurrency: deploy-pr-${{github.event.number}}

jobs:
  deploy:
    name: Deploy PR ${{github.event.number}}
    if: contains(github.event.pull_request.labels.*.name, 'safe to deploy')
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: 22
      - name: install dependencies hoisted for lambda
        run: pnpm install --node-linker=hoisted
      - run: pnpm exec serverless package --stage dev
      - uses: actions/upload-artifact@v5
        with:
          name: dev-ilios-lti-launch.zip
          path: ./.serverless/ilios-lti-launch.zip
          if-no-files-found: error
          retention-days: 3
          compression-level: 0
      - run: pnpm exec serverless deploy --stage dev --package ./.serverless --conceal
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - uses: act10ns/slack@v2
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_ILIOS_DEPLOYMENT_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          message: LTI Server Preview deploy failed {{ env.GITHUB_SERVER_URL }}/{{ env.GITHUB_REPOSITORY }}/actions/runs/{{ env.GITHUB_RUN_ID }}
